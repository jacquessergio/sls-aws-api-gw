  - http: 
      path: /v2/roles/paginado 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/roles 
      method: POST
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/usuarios 
      method: POST
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/usuarios/{id} 
      method: PUT
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/regras/{id} 
      method: DELETE
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/usuarios/{id} 
      method: DELETE
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/usuarios/paginado 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/regras 
      method: POST
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/teste 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/menu/{id} 
      method: DELETE
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/menu/paginado 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/teste2 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/menu 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/regras 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/relatorios/embedded/{id} 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/relatorios/{id} 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/roles/{id} 
      method: DELETE
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/relatorios/{id} 
      method: PUT
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/usuarios/{id} 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/regras/{id} 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/roles/{id} 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/regras/{id} 
      method: PUT
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/relatorios/{id} 
      method: DELETE
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/regras/paginado 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/relatorios 
      method: POST
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/roles/{id} 
      method: PUT
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/menu/{id} 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/roles 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/log-acessos/paginado 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/menu/sub-menus 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/relatorios 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/menu/{id} 
      method: PUT
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/relatorios/embedded/{id}/username/{username} 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/usuarios 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/relatorios/paginado 
      method: GET
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
  - http: 
      path: /v2/menu 
      method: POST
      integration: lambda-proxy
      cors: true
      authorizer:
        type: CUSTOM
        authorizerId:
          Ref: ApiGatewayAuthorizer
      reqValidatorName: ApiGatewayRequestValidator
      request:
        parameters:
          headers:
            'Authorization': true
